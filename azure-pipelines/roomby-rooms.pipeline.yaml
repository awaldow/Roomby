name: Roomby.API.Rooms-$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - Roomby.API.Rooms

variables:
- name: buildConfiguration
  value: 'Release'
- name: projectPath
  value: '**/Roomby.API.Rooms.csproj'
- name: testProjectPath
  value: '**/Roomby.API.Rooms.[Tt]ests/*.csproj'
- name: terraformTestPath
  value: 'terraform/test/rooms/'
- name: terraformProdPath
  value: 'terraform/prod/rooms/'

stages:
- stage: 'Build'
  displayName: 'Build the API'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'windows-2019'

    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 4.4.1'
      inputs:
        versionSpec: 4.4.1
    
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk 5.x'
      inputs:
        version: 5.x
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: '$(projectPath)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: '$(testProjectPath)'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: false
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: Terraform test'
      inputs:
        PathToPublish: '$(terraformTestPath)'
        ArtifactName: terraformtest

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: Terraform prod'
      inputs:
        PathToPublish: '$(terraformProdPath)'
        ArtifactName: terraformprod

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: code'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: code
      condition: succeededOrFailed()

- stage: 'Deploy'
  dependsOn: Build
  displayName: 'Deploy the API'
  condition: eq(1,2)
  jobs:
  - job: 'Provision_Test'
    displayName: 'Provision Test infrastructure'
    variables:
      - group: Roomby Rooms Terraform Test Backend Config
    pool:
      vmImage: 'windows-2019'
    steps:
      - download: current
        artifact: terraformtest

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        inputs:
          terraformVersion: '0.12.12'
        displayName: Install Terraform

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
        displayName: 'Terraform init'
        inputs:
          command: init
          backendServiceArm: 'Visual Studio Enterprise'
          backendAzureRmResourceGroupName: '$(backendResourceGroup)'
          backendAzureRmStorageAccountName: $(backendStorageAccountName)
          backendAzureRmContainerName: $(backendContainerName)
          backendAzureRmKey: $(backendKeyFile)
          
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
        inputs:
          command: plan
          environmentServiceNameAzureRM: 'Visual Studio Enterprise'
          commandOptions: -out=terraform.plan
        displayName: Terraform Plan

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
        inputs:
          command: apply
          environmentServiceNameAzureRM: 'Visual Studio Enterprise'
          commandOptions: terraform.plan
        displayName: Terraform Apply
  